var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [TensorMul]","category":"page"},{"location":"reference/#TensorMul.broadlike-Tuple{Any, Vararg{Any}}","page":"Reference","title":"TensorMul.broadlike","text":"broadlike(A, B...)\n\nReshapes (broadcasts) A into the size of A .+ B .+ ..., without doing the sum.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TensorMul.tensordot-Tuple{AbstractArray, AbstractArray, AbstractArray}","page":"Reference","title":"TensorMul.tensordot","text":"tensordot(X, W, Y)\n\nX*W*Y, contracting all dimensions of W with the corresponding first dimensions of X and Y, and matching the remaining last dimensions of X to the remaining last dimensions of Y.\n\nFor example, C[b] = sum(X[i,j,b] * W[i,j,μ,ν] * Y[μ,ν,b]).\n\n\n\n\n\n","category":"method"},{"location":"reference/#TensorMul.tensormul_ff-Union{Tuple{dims}, Tuple{AbstractArray, AbstractArray, Val{dims}}} where dims","page":"Reference","title":"TensorMul.tensormul_ff","text":"tensormul_ff(A, B, Val(dims))\n\nA*B contracting first dims dimensions of A with first dims dimensions of B (which must match).\n\n\n\n\n\n","category":"method"},{"location":"reference/#TensorMul.tensormul_fl-Union{Tuple{dims}, Tuple{AbstractArray, AbstractArray, Val{dims}}} where dims","page":"Reference","title":"TensorMul.tensormul_fl","text":"tensormul_fl(A, B, Val(dims))\n\nA*B contracting first dims dimensions of A with last dims dimensions of B.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TensorMul.tensormul_lf-Union{Tuple{dims}, Tuple{AbstractArray, AbstractArray, Val{dims}}} where dims","page":"Reference","title":"TensorMul.tensormul_lf","text":"tensormul_lf(A, B, Val(dims))\n\nA*B contracting last dims dimensions of A with first dims dimensions of B.\n\n\n\n\n\n","category":"method"},{"location":"reference/#TensorMul.tensormul_ll-Union{Tuple{dims}, Tuple{AbstractArray, AbstractArray, Val{dims}}} where dims","page":"Reference","title":"TensorMul.tensormul_ll","text":"tensormul_ll(A, B, Val(dims))\n\nA*B contracting last dims dimensions of A with last dims dimensions of B.\n\n\n\n\n\n","category":"method"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"EditURL = \"https://github.com/cossio/TensorMul.jl/blob/master/docs/src/literate/tensordot.jl\"","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"In this example we describe the usage of TensorMul.tensordot. First let's load the package.","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"import TensorMul\nnothing #hide","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"Let's define the dimensions of the problem.","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"N = (3,7)\nM = (2,3)\nB = 16\nnothing #hide","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"We will assume our data consists of B batch examples, where each example consists of matrices X of size N, and matrices Y of size M.","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"X = randn(N..., B)\nY = randn(M..., B)\nnothing #hide","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"These datasets are combined via some weight tensor of corresponding dimensions:","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"W = randn(N..., M...)\nnothing #hide","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"Now we want to form a contraction of X and Y with W. More precisely, we want to compute the quantity:","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"C = [\n    sum(\n        X[i,b] * W[i,μ] * Y[μ,b]\n        for i in CartesianIndices(N),\n            μ in CartesianIndices(M)\n    ) for b in 1:B\n]\nnothing #hide","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"Here C is a vector with B elements.","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"The downside with the above approach is that we have to know which dimensions to reduce, what dimensions correspond to batches, and dimensions of X correspond to those of W, etc. That's what TensorMul.tensordot computes. In the following line, it will compute the same quantity C, but automatically figuring out which dimensions to reduce.","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"TensorMul.tensordot(X, W, Y) ≈ C","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"","category":"page"},{"location":"literate/tensordot/","page":"tensordot","title":"tensordot","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#TensorMul.jl","page":"Home","title":"TensorMul.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TensorMul.jl","category":"page"}]
}
